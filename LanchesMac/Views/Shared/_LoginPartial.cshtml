@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@inject SignInManager<IdentityUser> SignInManager

@* facilita o gerenciamento de autenticação de usuários *@

@* feita uma verificação condicional para determinar se o usuário atual está autenticado *@
@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" id="logoutForm"
          method="post" class="navbar-left">
        <ul class="nav navbar-nav navbar-left">
            <a href="javascript:document.getElementById('logoutForm').submit()" style="color:white">&nbsp;Log off&nbsp;&nbsp;&nbsp;</a>
        </ul>
    </form>
}
else
{
<ul class="nav navbar-nav navbar-left">
    @*  direciona o usuário para a página de login *@
    <a class="nav-link text-light" asp-controller="Account" asp-action="Login" asp-route-returnUrl="@string.Format("{0}{1}",Context.Request.Path, Context.Request.QueryString)" style="color:white">&nbsp; Log in&nbsp; </a>
    @*  direciona o usuário para a página de registro *@
    <a class="nav-link text-light" asp-controller="Account" asp-action="Register" style="color:white">&nbsp;Registro&nbsp;&nbsp;&nbsp; </a>
</ul>
}
